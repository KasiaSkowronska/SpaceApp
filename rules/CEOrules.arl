ruleset CEOrules {

import space.Stock;
import space.Spaceship;
import space.SpaceCorp;
import space.Planet;
import java.util.Iterator;
import java.util.Vector ; 
import java.util.ArrayList;
import java.util.Collection;

  variables {
    String helloWorld = new String("Able rules!"); // One variable minimum
    String name;
    String Goal;

    static Spaceship ship;
    static Vector ships;
    static Vector planets;
    static Planet planet;
    Iterator i;

    
  static Stock wood;
   static Stock diamonds;
    static Stock uran;
    
  }

  inputs{name, ship, wood, diamonds, uran, ships, planets};  // Optional
  outputs{}; // Optional
  

  
    void preProcess() {
    PP:  wm.clear(); 
    PP0: wm.assertAll(ships) ;
    Pwood: wm.assert(wood);
    Pdia: wm.assert(diamonds);
    Puran: wm.assert(uran);
    PPplantes: wm.assertAll(planets);
  }

  void process() using PatternMatchRete {
      Rule_unload:
      when( Spaceship ship   ( ship.isEmpty == false ) )
      do  {       
            ship.unload(); 
          }
  Rule1: println("Proces ceo "); 
    Rule_4:
      when( Spaceship ship   ( ship.isEmpty == true ) )
      do  {       
            println("Statek " + ship.name + " jest pusty"); 
            wm.assert(ship);
          }
    NoStock:
      when( Stock stock   ( stock.getStockAmount() < 500) & 
      		Spaceship ship (ship.isEmpty == true) &
      		Planet planet (planet.stockType == stock.type))
      do  {       
            ship.launch(stock.type, planet);
            //wm.assert(wood);
            wm.modify(ship);
            wm.modify(stock);
          }     
}
}